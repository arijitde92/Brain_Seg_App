hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: Hippocampal Segmentation Factory (HSF)
    header: '${hydra.help.app_name} is powered by Hydra, ONNX, ONNXRuntime, DeepSparse,
      and has been made possible by the HPE Jean Zay Supercomputer (IDRIS, GENCI,
      France).

      '
    footer: 'Inference sessions are provided by ONNX (https://onnx.ai), ONNXRuntime
      (https://onnxruntime.ai), and DeepSparse (https://neuralmagic.com).

      Please refer to ONNXRuntime''s (or DeepSparse''s) documentation for setting-up
      the correct environment, to benefit from the performance and scalability of
      hardware accelerations.

      Configuration powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}


      == Configuration groups ==

      Compose your configuration from those groups (group=option)

      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (e.g. hsf roiloc.margin=[16, 2, 16])

      You can also add specific configs absent from the default yaml files (e.g. hsf
      +augmentation.elastic.image_interpolation=sitkBSpline)

      Fields set with ??? are mandatory.


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - files.path=/home/arijit-de/Documents/github/Brain_Seg_App/uploads/hipp
    - files.pattern=*.nii.gz
    - roiloc.margin=[20,8,20]
    - roiloc.contrast=t1
    - segmentation.ca_mode=1/2/3
  job:
    name: factory
    chdir: true
    override_dirname: files.path=/home/arijit-de/Documents/github/Brain_Seg_App/uploads/hipp,files.pattern=*.nii.gz,roiloc.contrast=t1,roiloc.margin=[20,8,20],segmentation.ca_mode=1/2/3
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.1'
    cwd: /home/arijit-de/Documents/github/Brain_Seg_App
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: hsf.conf
      schema: pkg
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /home/arijit-de/Documents/github/Brain_Seg_App/outputs/2024-08-12/12-03-30
    choices:
      hardware: onnxruntime
      multispectrality: default
      augmentation: default
      segmentation: bagging_accurate
      roiloc: default_corot2
      files: default
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: hsf
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
